version: "3"
services:
  
  order-service:
    build : ./order-service/
    environment:
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:5555
      - OTEL_RESOURCE_ATTRIBUTES=service.name=order-service,service.version=1.0
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/order
      - RESTAURANT_URL=http://restaurant-service:9081
    ports :
      - "8080:8080"
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-external-labels: job=dockerlogs,owner=hemant,environment=development
  
  restaurant-service:
    build : ./restaurant-service/
    environment:
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:5555
      - OTEL_RESOURCE_ATTRIBUTES=service.name=restaurant-service,service.version=1.0
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/restaurant
      - RATING_URL=http://rating-service:9083
    ports :
      - "9081:9081"
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-external-labels: job=dockerlogs,owner=hemant,environment=development

  rating-service:
    build : ./rating-service/
    environment:
      - DB=mongodb://mongo/rating
      - SERVICE_NAME=rating-service
      #- OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:5556 if using http
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:5555 
    ports :
      - "9083:9083"
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-external-labels: job=dockerlogs,owner=hemant,environment=development

  point-service:
    build : ./point-service/
    environment:
      - APP_PORT=9084
      - OTEL_SERVICE_NAME=point-service
      - OTEL_TRACES_EXPORTER=console,otlp
      - OTEL_METRICS_EXPORTER=console,otlp
      - OTEL_SDK_DISABLED=false
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:5555 
    ports :
      - "9084:9084"
    logging:
      driver: loki
      options:
        loki-url: http://localhost:3100/loki/api/v1/push
        loki-external-labels: job=dockerlogs,owner=hemant,environment=development

  db :
    image : postgres:11.7
    ports : 
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=order
    #volumes:
    #  - ./db/export:/db/export
  
  mongo:
    image: mongo
    ports :
      - "27017:27017"
    #environment:
    #  MONGO_INITDB_ROOT_USERNAME: root
    #  MONGO_INITDB_ROOT_PASSWORD: example

  queue:
    image : rabbitmq:3.7-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=test
      - RABBITMQ_DEFAULT_PASS=test
      - ERLANG_COOKIE=abcdefg
    ports:
      - "5672:5672"
      - "15672:15672"
      - "61613:61613"

  redis:
    image: redis
    ports:
      - "6379:6379"

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.82.0
    #command: [ "--config=/etc/otel-collector-config.yaml" ]
    command: [ "--config=/data/otel/collector-config-local.yaml" ]
    #volumes:
    #  - ./configuration/otel/collector-config-local.yaml:/etc/otel-collector-config.yaml
    volumes :
      - ./configuration/:/data/
    ports:
      #- "1888:1888"   # pprof extension
      #- "8888:8888"   # Prometheus metrics exposed by the collector
      #- "8889:8889"   # Prometheus exporter metrics
      #- "13133:13133" # health_check extension
      - "5555:5555"   # OTLP gRPC receiver
      - "5556:5556" # OTLP http receiver
      - "6666:6666"
      #- "55679:55679" # zpages extension

  tempo:
    image: grafana/tempo:2.0.1
    #command: [ "-search.enabled=true", "-config.file=/etc/tempo.yaml" ]
    command: ["-config.file=/etc/tempo.yaml" ]
    container_name: tempo
    hostname: tempo
    volumes:
      - ./configuration/tempo/tempo-config.yaml:/etc/tempo.yaml
      - ./configuration/tempo/tempo-overrides.yaml:/etc/overrides.yaml
      #- ./tempo-data:/tmp/tempo
    ports:
      - "3200:3200" #tempo status port
      - "4317:4317" # otlp grpc
    #healthcheck:
    #  interval: 5s
    #  retries: 10
    #  test: wget --no-verbose --tries=1 --spider http://localhost:3200/status || exit 1

  prometheus:
    image: prom/prometheus:latest
    hostname: prometheus
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./configuration/prometheus/prometheus.yaml:/etc/prometheus.yaml
      - ./configuration/prometheus/rules.yml:/etc/rules.yml
    ports:
      - "9090:9090"
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:9090/status || exit 1

  loki:
    image: grafana/loki:2.3.0
    container_name: loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana:9.5.1
    hostname: grafana 
    depends_on:
      #tempo:
      #  condition: service_healthy
      prometheus:
        condition: service_healthy
    volumes:
      - ./configuration/grafana/grafana-bootstrap.ini:/etc/grafana/grafana.ini
      - ./configuration/grafana/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    healthcheck:
      interval: 5s
      retries: 10
      test: wget --no-verbose --tries=1 --spider http://localhost:3000 || exit 1