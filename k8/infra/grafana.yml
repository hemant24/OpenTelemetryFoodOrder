apiVersion: v1
kind: ConfigMap
metadata:
 name: grafana-config
data:
 grafana: |
  [feature_toggles]
  enable = tempoSearch tempoBackendSearch
  [server]
  root_url = %(protocol)s://%(domain)s:%(http_port)s/grafana/
  serve_from_sub_path = true

 datasources: |
  apiVersion: 1

  datasources:
  - name: Prometheus
    type: prometheus
    access: proxy
    orgId: 1
    url: http://prometheus-service:9090
    basicAuth: false
    isDefault: false
    version: 1
    editable: false
  - name: Tempo
    type: tempo
    access: proxy
    orgId: 1
    url: http://tempo-service:3200
    basicAuth: false
    isDefault: true
    version: 1
    editable: false
    apiVersion: 1
    uid: tempo

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      #volumes:
      #  - name: test-volume
      #    hostPath:
      #      # directory location on host
      #      path: /configurations/configuration
      #      type: Directory
      volumes :
        - name: grafana-config-vol
          configMap:
            name: grafana-config
            items:
              - key : grafana
                path: grafana.ini
              - key : datasources
                path: provisioning/datasources/datasources.yaml
      containers:
      - name: grafana
        image: grafana/grafana:9.5.1
        imagePullPolicy: IfNotPresent
        env:
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: 'true'
          - name : GF_AUTH_ANONYMOUS_ORG_ROLE
            value : 'Admin'
          - name : GF_AUTH_DISABLE_LOGIN_FORM
            value : 'true'
          - name : GF_PATHS_CONFIG
            value : '/data/grafana.ini'
          - name : GF_PATHS_PROVISIONING
            value : '/data/provisioning'
        volumeMounts:
          - mountPath: /data
            name: grafana-config-vol
        command:
          - '/run.sh'
        #command: [ "--config=/data/otel-agent-config.yaml" ]
        ports:
          - containerPort: 3000

---

apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: default
spec:
  type: ClusterIP #NodePort #LoadBalancer
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000